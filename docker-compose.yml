services:
  # JSON Server comme base de données simulée
  json-server:
    image: vimagick/json-server
    volumes:
      - ./tweet-collector/mock_data:/data
    ports:
      - "3000:80"
    command: --host 0.0.0.0 --port 80 /data/db.json
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true

  # Zookeeper pour Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  # Kafka pour la gestion des messages
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "raw-tweets:1:1,processed-tweets:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped

  # Elasticsearch pour l'indexation des tweets
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped

  # Kibana pour la visualisation
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    
  # API des tweets
  tweet-api:
    build:
      context: ./tweet-api
    ports:
      - "8000:8000"
    environment:
      - ES_HOST=elasticsearch:9200
      - ES_INDEX=tweets
      - API_HOST=0.0.0.0
      - API_PORT=8000
    depends_on:
      - elasticsearch
    restart: unless-stopped
    
  # Frontend pour la visualisation des tweets
  tweet-frontend:
    build:
      context: ./tweet-frontend
    ports:
      - "5000:5000"
    environment:
      - API_URL=http://tweet-api:8000
      - FLASK_ENV=development
    depends_on:
      - tweet-api
    restart: unless-stopped
    
  # Collecteur de tweets
  tweet-collector:
    build:
      context: ./tweet-collector
    depends_on:
      - json-server
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DB_URL=http://json-server/tweets
    volumes:
      - ./tweet-collector:/app
    restart: unless-stopped
    
  # Processeur de tweets
  tweet-processor:
    build:
      context: ./tweet-processor
    depends_on:
      - kafka
      - elasticsearch
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ES_HOST=elasticsearch:9200
      - CONTINUOUS_MODE=true
    volumes:
      - ./tweet-processor:/app
    restart: unless-stopped

volumes:
  esdata:

networks:
  default:
    driver: bridge
